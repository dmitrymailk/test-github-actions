name: typescipt_action
 
on:
  push:
    tags:
      - "**"

jobs:
  build:
    if: ${{ 0}}
    strategy:
      matrix:
        node-version: [16.16.0]
 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install    
      - name: run linter
        run: | 
          npm run lint
      - name: run test
        run: | 
          npm run test

  branch_has_tag:
    # needs: [build]
    runs-on: ubuntu-latest
    outputs:
      branch_regex: ${{ steps.relese-tag-match.outputs.match }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions-ecosystem/action-regex-match@v2
        id: relese-tag-match
        with:
          text: ${{ github.ref }}
          regex: 'refs\/tags\/rc-[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'

  show_tags:
    needs: [branch_has_tag]
    if: ${{needs.branch_has_tag.outputs.branch_regex != ''}}
 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup python
        uses: actions/setup-python@v4
        with: 
          python-version: '3.8'
          run: |
            output=$(python ./show_tags.py --new_tag="${{ github.ref_name }}" --actor="${{ github.actor }}")
            echo "::set-output name=some_output::$output"
          id: step1
      - name: show tags
        run: echo "${{steps.step1.outputs.some_output}}"
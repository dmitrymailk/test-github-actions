name: typescipt_action
 
on:
  push:
    tags:
      - "**"

jobs:
  build:
    if: ${{ 0 }}
    strategy:
      matrix:
        node-version: [16.16.0]
 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install    
      - name: run linter
        run: | 
          npm run lint
      - name: run test
        run: | 
          npm run test

  branch_has_tag:
    # needs: [build]
    # if: ${{ 0 }}
    runs-on: ubuntu-latest
    outputs:
      branch_regex: ${{ steps.relese-tag-match.outputs.match }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions-ecosystem/action-regex-match@v2
        id: relese-tag-match
        with:
          text: ${{ github.ref }}
          regex: 'refs\/tags\/rc-[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'

  show_tags:
    needs: [branch_has_tag]
    if: ${{needs.branch_has_tag.outputs.branch_regex != ''}}
 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: setup python
        uses: actions/setup-python@v4
        with: 
          python-version: '3.8'
      - name: install dependencies
        run: |
          pip install -r requirements.txt
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
      - name: Build and push docker
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simple_react_ci:${{steps.tag.outputs.tag}}
      - name: get commits beetween tags and send to tracker
        env: 
          ISSUE_NAME: ${{ secrets.ISSUE_NAME }}
          TRACKER_TOKEN: ${{ secrets.TRACKER_TOKEN }}
          ORG_ID: ${{ secrets.ORG_ID }}
        run: |
          output=$(python ./show_tags.py --new_tag="${{ github.ref_name }}" --actor="${{ github.actor }}")
          python ./send_info.py --message="$output" --actor="${{ github.actor }}" 
